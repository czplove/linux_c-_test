/*
类是面向对象程序设计的核心，它实际是一种新的数据类型，也是实现抽象类型的工具，因为类是通过抽象数据类型的方法来实现的一种数据类型。
类是对某一类对象的抽象；而对象是某一种类的实例，因此，类和对象是密切相关的。没有脱离对象的类，也没有不依赖于类的对象。

类的优点是能将“数据”（数据成员）和“操作”（函数成员）封装起来，大大提高程序的可维护性和扩展性。

类的所有非静态数据成员以连续存储的方式存储在内存中，如下图所示。我们可以将一个对象看作一个存储了不同类型数据的”数组”，
该”数组”的首地址是对象本身的地址（即this指针）。对象的数据成员是根据this指针以及该数据成员与this的偏移量来获取的。 
*/
#include "class_fun.cpp"

int main(){
    Array_max array1;  // 定义类对象,如果A x;就是一个声明,告诉编译器x是一个A类的对象变量,但是不进行初始化。
    			//如果以后,x= new A(); 这就是初始化,分配了空间。同样,A x=new A();这也是声明的同时初始化
    array1.set_value();//初始化操作  
    array1.max_value();//求最大数的操作  
    array1.show_value();//输出最大的数   
    return 0;  
}
